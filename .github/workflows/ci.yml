name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint
        run: pnpm lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run type checks
        run: pnpm typecheck

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run unit tests
        run: pnpm test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build workspace packages
        run: pnpm build
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: soulstone-build-artifacts
          retention-days: 7
          path: |
            apps/api/dist
            apps/web/dist
            packages/config/dist
            packages/ui/dist

  security:
    name: Security Scans
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8.15.4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run dependency audit
        run: pnpm audit --audit-level=low
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.13.1
        with:
          scan-type: fs
          exit-code: '1'
          format: table
          severity: CRITICAL,HIGH,MEDIUM,LOW
      - name: Run Gitleaks secret scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container-images:
    name: Build and Publish Images
    runs-on: ubuntu-latest
    needs:
      - lint
      - type-check
      - test
      - build
      - security
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAMESPACE: ghcr.io/${{ github.repository_owner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Determine package versions
        id: versions
        run: |
          echo "api_version=$(node -p \"require('./apps/api/package.json').version\")" >> "$GITHUB_OUTPUT"
          echo "web_version=$(node -p \"require('./apps/web/package.json').version\")" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API image
        id: build_api
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAMESPACE }}/soulstone-api:${{ steps.versions.outputs.api_version }}
            ${{ env.IMAGE_NAMESPACE }}/soulstone-api:${{ github.sha }}

      - name: Build and push Web image
        id: build_web
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/web/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAMESPACE }}/soulstone-web:${{ steps.versions.outputs.web_version }}
            ${{ env.IMAGE_NAMESPACE }}/soulstone-web:${{ github.sha }}

      - name: Prepare SBOM directory
        run: mkdir -p sboms

      - name: Generate SBOM for API image
        uses: anchore/syft-action@v0.16.0
        with:
          image: ${{ env.IMAGE_NAMESPACE }}/soulstone-api@${{ steps.build_api.outputs.digest }}
          output-file: sboms/api-${{ github.sha }}.spdx.json

      - name: Generate SBOM for Web image
        uses: anchore/syft-action@v0.16.0
        with:
          image: ${{ env.IMAGE_NAMESPACE }}/soulstone-web@${{ steps.build_web.outputs.digest }}
          output-file: sboms/web-${{ github.sha }}.spdx.json

      - name: Scan API image with Grype
        uses: anchore/grype-action@v0.10.0
        with:
          image: ${{ env.IMAGE_NAMESPACE }}/soulstone-api@${{ steps.build_api.outputs.digest }}

      - name: Scan Web image with Grype
        uses: anchore/grype-action@v0.10.0
        with:
          image: ${{ env.IMAGE_NAMESPACE }}/soulstone-web@${{ steps.build_web.outputs.digest }}

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: container-sboms-${{ github.sha }}
          retention-days: 30
          path: sboms
