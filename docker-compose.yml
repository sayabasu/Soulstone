version: '3.9'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-soulstone_dev}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - soulstone

  redis:
    image: redis:7-alpine
    command: ['redis-server', '--appendonly', 'yes']
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - soulstone

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - '${MAILHOG_SMTP_PORT:-1025}:1025'
      - '${MAILHOG_HTTP_PORT:-8025}:8025'
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:8025']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - soulstone

  localstack:
    image: localstack/localstack:2.3
    environment:
      SERVICES: s3,sqs,sns,sts
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_DEFAULT_REGION: ${AWS_REGION:-ap-south-1}
    ports:
      - '${LOCALSTACK_PORT:-4566}:4566'
    healthcheck:
      test: ['CMD-SHELL', 'awslocal sts get-caller-identity || exit 1']
      interval: 15s
      timeout: 5s
      retries: 10
    networks:
      - soulstone

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file:
      - .env.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '${PORT:-4000}:4000'
    networks:
      - soulstone

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    env_file:
      - .env.dev
    depends_on:
      api:
        condition: service_started
    ports:
      - '${CLIENT_PORT:-5173}:5173'
    networks:
      - soulstone

networks:
  soulstone:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
